# Generated by Django 5.2.6 on 2025-10-03 19:00

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('branches', '0002_initial'),
        ('products', '0002_initial'),
    ]

    operations = [
        migrations.RemoveIndex(
            model_name='stockmovements',
            name='products_st_stocks__aaa873_idx',
        ),
        migrations.RemoveIndex(
            model_name='stocks',
            name='products_st_branch__d94047_idx',
        ),
        migrations.RemoveIndex(
            model_name='stocks',
            name='products_st_branch__4a0583_idx',
        ),
        migrations.RenameField(
            model_name='attributevalue',
            old_name='attribute',
            new_name='attribute_id',
        ),
        migrations.RenameField(
            model_name='category',
            old_name='parent',
            new_name='parent_id',
        ),
        migrations.RenameField(
            model_name='flexibleprice',
            old_name='branch',
            new_name='branch_id',
        ),
        migrations.RenameField(
            model_name='flexibleprice',
            old_name='customer_group',
            new_name='customer_group_id',
        ),
        migrations.RenameField(
            model_name='flexibleprice',
            old_name='customer',
            new_name='customer_id',
        ),
        migrations.RenameField(
            model_name='flexibleprice',
            old_name='variant',
            new_name='variant_id',
        ),
        migrations.RenameField(
            model_name='product',
            old_name='brand',
            new_name='brand_id',
        ),
        migrations.RenameField(
            model_name='product',
            old_name='category',
            new_name='category_id',
        ),
        migrations.RenameField(
            model_name='product',
            old_name='manufacturer',
            new_name='manufacturer_id',
        ),
        migrations.RenameField(
            model_name='product',
            old_name='supplier',
            new_name='supplier_id',
        ),
        migrations.RenameField(
            model_name='productimage',
            old_name='variant',
            new_name='variant_id',
        ),
        migrations.RenameField(
            model_name='productvariant',
            old_name='product',
            new_name='product_id',
        ),
        migrations.RenameField(
            model_name='productvariantanswer',
            old_name='question',
            new_name='question_id',
        ),
        migrations.RenameField(
            model_name='productvariantmarketing',
            old_name='variant',
            new_name='variant_id',
        ),
        migrations.RenameField(
            model_name='productvariantoffer',
            old_name='ProductVariant',
            new_name='ProductVariant_id',
        ),
        migrations.RenameField(
            model_name='productvariantquestion',
            old_name='ProductVariant',
            new_name='ProductVariant_id',
        ),
        migrations.RenameField(
            model_name='productvariantreview',
            old_name='ProductVariant',
            new_name='ProductVariant_id',
        ),
        migrations.RenameField(
            model_name='stockmovements',
            old_name='stocks',
            new_name='stocks_id',
        ),
        migrations.RenameField(
            model_name='stocks',
            old_name='branch',
            new_name='branch_id',
        ),
        migrations.RenameField(
            model_name='stocks',
            old_name='variant',
            new_name='variant_id',
        ),
        migrations.RenameField(
            model_name='stocktransfer',
            old_name='from_branch',
            new_name='from_branch_id',
        ),
        migrations.RenameField(
            model_name='stocktransfer',
            old_name='to_branch',
            new_name='to_branch_id',
        ),
        migrations.RenameField(
            model_name='stocktransferitem',
            old_name='transfer',
            new_name='transfer_id',
        ),
        migrations.RenameField(
            model_name='stocktransferitem',
            old_name='variant',
            new_name='variant_id',
        ),
        migrations.RenameIndex(
            model_name='productvariant',
            new_name='products_pr_product_101f29_idx',
            old_name='products_pr_product_cee51f_idx',
        ),
        migrations.AddField(
            model_name='flexibleprice',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now, verbose_name='Created at'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='flexibleprice',
            name='is_active',
            field=models.BooleanField(default=True, verbose_name='Active'),
        ),
        migrations.AddField(
            model_name='flexibleprice',
            name='is_deleted',
            field=models.BooleanField(default=False, verbose_name='Deleted'),
        ),
        migrations.AddField(
            model_name='flexibleprice',
            name='updated_at',
            field=models.DateTimeField(auto_now=True, verbose_name='Updated at'),
        ),
        migrations.AddField(
            model_name='productvariantoffer',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now, verbose_name='Created at'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='productvariantoffer',
            name='is_active',
            field=models.BooleanField(default=True, verbose_name='Active'),
        ),
        migrations.AddField(
            model_name='productvariantoffer',
            name='is_deleted',
            field=models.BooleanField(default=False, verbose_name='Deleted'),
        ),
        migrations.AddField(
            model_name='productvariantoffer',
            name='updated_at',
            field=models.DateTimeField(auto_now=True, verbose_name='Updated at'),
        ),
        migrations.AlterField(
            model_name='productvariant',
            name='bridge_width',
            field=models.ForeignKey(blank=True, limit_choices_to={'attribute_id__name': 'Width'}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_bridge_width', to='products.attributevalue'),
        ),
        migrations.AlterField(
            model_name='productvariant',
            name='dimensions',
            field=models.ForeignKey(blank=True, limit_choices_to={'attribute_id__name': 'Dimensions'}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_dimensions', to='products.attributevalue'),
        ),
        migrations.AlterField(
            model_name='productvariant',
            name='frame_color',
            field=models.ForeignKey(blank=True, limit_choices_to={'attribute_id__name': 'Color'}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_color', to='products.attributevalue'),
        ),
        migrations.AlterField(
            model_name='productvariant',
            name='frame_material',
            field=models.ForeignKey(blank=True, limit_choices_to={'attribute_id__name': 'Material'}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_frame_material', to='products.attributevalue'),
        ),
        migrations.AlterField(
            model_name='productvariant',
            name='frame_shape',
            field=models.ForeignKey(blank=True, limit_choices_to={'attribute_id__name': 'Shape'}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_frame_shape', to='products.attributevalue'),
        ),
        migrations.AlterField(
            model_name='productvariant',
            name='lens_base_curve',
            field=models.ForeignKey(blank=True, limit_choices_to={'attribute_id__name': 'Base Curve'}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_lens_base_curve', to='products.attributevalue'),
        ),
        migrations.AlterField(
            model_name='productvariant',
            name='lens_color',
            field=models.ForeignKey(blank=True, limit_choices_to={'attribute_id__name': 'Color'}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_lens_color', to='products.attributevalue'),
        ),
        migrations.AlterField(
            model_name='productvariant',
            name='lens_diameter',
            field=models.ForeignKey(blank=True, limit_choices_to={'attribute_id__name': 'Diameter'}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_lens_diameter', to='products.attributevalue'),
        ),
        migrations.AlterField(
            model_name='productvariant',
            name='lens_material',
            field=models.ForeignKey(blank=True, limit_choices_to={'attribute_id__name': 'Material'}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_lens_material', to='products.attributevalue'),
        ),
        migrations.AlterField(
            model_name='productvariant',
            name='lens_type',
            field=models.ForeignKey(blank=True, limit_choices_to={'attribute_id__name': 'Lens Type'}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_lens_type', to='products.attributevalue'),
        ),
        migrations.AlterField(
            model_name='productvariant',
            name='lens_water_content',
            field=models.ForeignKey(blank=True, limit_choices_to={'attribute_id__name': 'Water Content'}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_lens_water_content', to='products.attributevalue'),
        ),
        migrations.AlterField(
            model_name='productvariant',
            name='replacement_schedule',
            field=models.ForeignKey(blank=True, limit_choices_to={'attribute_id__name': 'Replacement Schedule'}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_replacement_schedule', to='products.attributevalue'),
        ),
        migrations.AlterField(
            model_name='productvariant',
            name='temple_length',
            field=models.ForeignKey(blank=True, limit_choices_to={'attribute_id__name': 'Length'}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_temple_length', to='products.attributevalue'),
        ),
        migrations.AlterField(
            model_name='productvariant',
            name='unit',
            field=models.ForeignKey(blank=True, help_text='Unit of measurement box piesces', limit_choices_to={'attribute_id__name': 'Unit'}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_unit', to='products.attributevalue'),
        ),
        migrations.AlterField(
            model_name='productvariant',
            name='warranty',
            field=models.ForeignKey(blank=True, limit_choices_to={'attribute_id__name': 'Warranty'}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_warranty', to='products.attributevalue'),
        ),
        migrations.AlterField(
            model_name='productvariant',
            name='weight',
            field=models.ForeignKey(blank=True, limit_choices_to={'attribute_id__name': 'Weight'}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_weight', to='products.attributevalue'),
        ),
        migrations.AlterUniqueTogether(
            name='product',
            unique_together={('type', 'brand_id', 'model')},
        ),
        migrations.AlterUniqueTogether(
            name='stocks',
            unique_together={('branch_id', 'variant_id')},
        ),
        migrations.AddIndex(
            model_name='stockmovements',
            index=models.Index(fields=['stocks_id', '-created_at'], name='products_st_stocks__aead7f_idx'),
        ),
        migrations.AddIndex(
            model_name='stocks',
            index=models.Index(fields=['branch_id', 'quantity_in_stock'], name='products_st_branch__29cd14_idx'),
        ),
        migrations.AddIndex(
            model_name='stocks',
            index=models.Index(fields=['branch_id', 'is_active'], name='products_st_branch__67ee15_idx'),
        ),
    ]
