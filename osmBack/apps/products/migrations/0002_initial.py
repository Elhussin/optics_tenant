# Generated by Django 5.2.6 on 2025-10-17 08:38

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('branches', '0002_initial'),
        ('crm', '0002_initial'),
        ('products', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name='productvariantanswer',
            name='answered_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='productvariantmarketing',
            name='variant_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='marketing', to='products.productvariant'),
        ),
        migrations.AddField(
            model_name='productvariantoffer',
            name='ProductVariant_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='offers', to='products.productvariant'),
        ),
        migrations.AddField(
            model_name='productvariantquestion',
            name='ProductVariant_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='products.productvariant'),
        ),
        migrations.AddField(
            model_name='productvariantquestion',
            name='asked_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='crm.customer'),
        ),
        migrations.AddField(
            model_name='productvariantanswer',
            name='question_id',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='answer', to='products.productvariantquestion'),
        ),
        migrations.AddField(
            model_name='productvariantreview',
            name='ProductVariant_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='products.productvariant'),
        ),
        migrations.AddField(
            model_name='productvariantreview',
            name='reviewed_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='crm.customer'),
        ),
        migrations.AddField(
            model_name='stocks',
            name='branch_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='branches.branch'),
        ),
        migrations.AddField(
            model_name='stocks',
            name='variant_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.productvariant'),
        ),
        migrations.AddField(
            model_name='stockmovements',
            name='stocks_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='movements', to='products.stocks'),
        ),
        migrations.AddField(
            model_name='stocktransfer',
            name='from_branch_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='outgoing_transfers', to='branches.branch'),
        ),
        migrations.AddField(
            model_name='stocktransfer',
            name='to_branch_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='incoming_transfers', to='branches.branch'),
        ),
        migrations.AddField(
            model_name='stocktransferitem',
            name='transfer_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='products.stocktransfer'),
        ),
        migrations.AddField(
            model_name='stocktransferitem',
            name='variant_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.productvariant'),
        ),
        migrations.AddField(
            model_name='productsupplier',
            name='supplier',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.supplier'),
        ),
        migrations.AlterUniqueTogether(
            name='attributevalue',
            unique_together={('attribute_id', 'value')},
        ),
        migrations.AddIndex(
            model_name='category',
            index=models.Index(fields=['name', 'is_active'], name='products_ca_name_752bb1_idx'),
        ),
        migrations.AddField(
            model_name='contactlensvariantexpirationdate',
            name='contact_lens_variant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.contactlensvariant'),
        ),
        migrations.AddField(
            model_name='contactlensvariant',
            name='lens_base_curve',
            field=models.ForeignKey(blank=True, limit_choices_to={'attribute_id__name': 'Base Curve'}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_lens_base_curve', to='products.attributevalue'),
        ),
        migrations.AddField(
            model_name='contactlensvariant',
            name='lens_coatings',
            field=models.ManyToManyField(blank=True, limit_choices_to={'attribute_id__name': 'Coatings'}, related_name='%(class)s_lens_coatings', to='products.attributevalue'),
        ),
        migrations.AddField(
            model_name='contactlensvariant',
            name='lens_color',
            field=models.ForeignKey(blank=True, limit_choices_to={'attribute_id__name': 'Color'}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_lens_color', to='products.attributevalue'),
        ),
        migrations.AddField(
            model_name='contactlensvariant',
            name='lens_diameter',
            field=models.ForeignKey(limit_choices_to={'attribute_id__name': 'Diameter'}, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_lens_diameter', to='products.attributevalue'),
        ),
        migrations.AddField(
            model_name='contactlensvariant',
            name='lens_material',
            field=models.ForeignKey(blank=True, limit_choices_to={'attribute_id__name': 'Material'}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_lens_material', to='products.attributevalue'),
        ),
        migrations.AddField(
            model_name='contactlensvariant',
            name='lens_water_content',
            field=models.ForeignKey(blank=True, limit_choices_to={'attribute_id__name': 'Water Content'}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_lens_water_content', to='products.attributevalue'),
        ),
        migrations.AddField(
            model_name='contactlensvariant',
            name='replacement_schedule',
            field=models.ForeignKey(blank=True, limit_choices_to={'attribute_id__name': 'Replacement Schedule'}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_replacement_schedule', to='products.attributevalue'),
        ),
        migrations.AddField(
            model_name='contactlensvariant',
            name='units',
            field=models.ForeignKey(blank=True, default=None, help_text='Unit of measurement box piesces', limit_choices_to={'attribute_id__name': 'Unit'}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_unit', to='products.attributevalue'),
        ),
        migrations.AddField(
            model_name='framevariant',
            name='bridge_width',
            field=models.ForeignKey(limit_choices_to={'attribute_id__name': 'Width'}, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_bridge_width', to='products.attributevalue'),
        ),
        migrations.AddField(
            model_name='framevariant',
            name='frame_color',
            field=models.ForeignKey(limit_choices_to={'attribute_id__name': 'Color'}, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_color', to='products.attributevalue'),
        ),
        migrations.AddField(
            model_name='framevariant',
            name='frame_material',
            field=models.ForeignKey(blank=True, limit_choices_to={'attribute_id__name': 'Material'}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_frame_material', to='products.attributevalue'),
        ),
        migrations.AddField(
            model_name='framevariant',
            name='frame_shape',
            field=models.ForeignKey(blank=True, limit_choices_to={'attribute_id__name': 'Shape'}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_frame_shape', to='products.attributevalue'),
        ),
        migrations.AddField(
            model_name='framevariant',
            name='lens_color',
            field=models.ForeignKey(blank=True, limit_choices_to={'attribute_id__name': 'Color'}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_lens_color', to='products.attributevalue'),
        ),
        migrations.AddField(
            model_name='framevariant',
            name='lens_diameter',
            field=models.ForeignKey(limit_choices_to={'attribute_id__name': 'Diameter'}, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_lens_diameter', to='products.attributevalue'),
        ),
        migrations.AddField(
            model_name='framevariant',
            name='temple_length',
            field=models.ForeignKey(limit_choices_to={'attribute_id__name': 'Length'}, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_temple_length', to='products.attributevalue'),
        ),
        migrations.AddField(
            model_name='rxlensvariant',
            name='lens_base_curve',
            field=models.ForeignKey(blank=True, limit_choices_to={'attribute_id__name': 'Base Curve'}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_lens_base_curve', to='products.attributevalue'),
        ),
        migrations.AddField(
            model_name='rxlensvariant',
            name='lens_coatings',
            field=models.ManyToManyField(blank=True, limit_choices_to={'attribute_id__name': 'Coatings'}, related_name='%(class)s_lens_coatings', to='products.attributevalue'),
        ),
        migrations.AddField(
            model_name='rxlensvariant',
            name='lens_color',
            field=models.ForeignKey(blank=True, limit_choices_to={'attribute_id__name': 'Color'}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_lens_color', to='products.attributevalue'),
        ),
        migrations.AddField(
            model_name='rxlensvariant',
            name='lens_diameter',
            field=models.ForeignKey(limit_choices_to={'attribute_id__name': 'Diameter'}, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_lens_diameter', to='products.attributevalue'),
        ),
        migrations.AddField(
            model_name='rxlensvariant',
            name='lens_material',
            field=models.ForeignKey(blank=True, limit_choices_to={'attribute_id__name': 'Material'}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_lens_material', to='products.attributevalue'),
        ),
        migrations.AddField(
            model_name='stoklensvariant',
            name='lens_coatings',
            field=models.ManyToManyField(blank=True, limit_choices_to={'attribute_id__name': 'Coatings'}, related_name='%(class)s_lens_coatings', to='products.attributevalue'),
        ),
        migrations.AddField(
            model_name='stoklensvariant',
            name='lens_color',
            field=models.ForeignKey(blank=True, limit_choices_to={'attribute_id__name': 'Color'}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_lens_color', to='products.attributevalue'),
        ),
        migrations.AddField(
            model_name='stoklensvariant',
            name='lens_diameter',
            field=models.ForeignKey(limit_choices_to={'attribute_id__name': 'Diameter'}, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_lens_diameter', to='products.attributevalue'),
        ),
        migrations.AddField(
            model_name='stoklensvariant',
            name='lens_material',
            field=models.ForeignKey(blank=True, limit_choices_to={'attribute_id__name': 'Material'}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_lens_material', to='products.attributevalue'),
        ),
        migrations.AlterUniqueTogether(
            name='extravariantattribute',
            unique_together={('variant_type', 'variant_id', 'attribute', 'value')},
        ),
        migrations.AddIndex(
            model_name='productvariant',
            index=models.Index(fields=['usku'], name='products_pr_usku_0d67b5_idx'),
        ),
        migrations.AddIndex(
            model_name='productvariant',
            index=models.Index(fields=['product_id'], name='products_pr_product_cee51f_idx'),
        ),
        migrations.AddConstraint(
            model_name='productvariant',
            constraint=models.UniqueConstraint(fields=('usku',), name='unique_variant_by_hash'),
        ),
        migrations.AlterUniqueTogether(
            name='product',
            unique_together={('type', 'brand', 'model', 'name')},
        ),
        migrations.AddIndex(
            model_name='productimage',
            index=models.Index(fields=['order'], name='products_pr_order_2597cf_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='productmanufacturer',
            unique_together={('product', 'manufacturer')},
        ),
        migrations.AddIndex(
            model_name='stocks',
            index=models.Index(fields=['branch_id', 'quantity_in_stock'], name='products_st_branch__29cd14_idx'),
        ),
        migrations.AddIndex(
            model_name='stocks',
            index=models.Index(fields=['branch_id', 'is_active'], name='products_st_branch__67ee15_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='stocks',
            unique_together={('branch_id', 'variant_id')},
        ),
        migrations.AddIndex(
            model_name='stockmovements',
            index=models.Index(fields=['stocks_id', '-created_at'], name='products_st_stocks__aead7f_idx'),
        ),
        migrations.AddIndex(
            model_name='stockmovements',
            index=models.Index(fields=['movement_type', '-created_at'], name='products_st_movemen_beddec_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='productsupplier',
            unique_together={('product', 'supplier')},
        ),
    ]
