import { ProductForginKeyConfigType } from "@/src/features/product/types";
import { generateLensOptions } from "@/src/features/product/utils/generateLensOptions";


export const checkBox = [
  { "label": "Is Active", "name": "is_active", type: "checkbox" },
  { "label": "Is Deleted", "name": "is_deleted", type: "checkbox" },
]

export const TypeEnum = [{ value: "CL", label: "Contact Lens" }, { value: "SL", label: "Spectacle Lens" }, { value: "FR", label: "Frames" }, { value: "AX", label: "Accessories" }, { value: "DV", label: "Devices" }, { value: "OT", label: "Other" }]
export const ProductTypeEnum=[
  {
    value:"SV-ST",
    label:"Single Stock",
    filter:"ST",
  },
  {
    value:"SV-RX",
    label:"Single RX",
    filter:"RX",
  },
  {
    value:"MF-RX",
    label:"Multi Focal ",
    filter:"RX",
  },
  {
    value:"BF-RX",
    label:"Bifocal RX",
    filter:"RX",
  },

  {
    value:"CL-Cl",
    label:"Contact Lens Clear",
    filter:"CL",
  },
  {
    value:"CL-CO",
    label:"Contact Lens Colored",
    filter:"CL",
  },
  {
    value:"FR-SG",
    label:"Frames Sun Glasses",
    filter:"FR",
  },
  {
    value:"FR-SP",
    label:"Frames Spectacle Glasses",
    filter:"FR",
  }
]

export const ProductVariantConfig: ProductForginKeyConfigType[] = [
  // üß© Product Type
  {
    name: "product_type_id",
    label: "Product Type",
    role: "all",
    filter: "Product Type",
    subFilter: "",
    title: "Product Type Sun Glasses ,Color Contact lens",
    entityName: "attribute-values",
    fieldName: "attribute_name",
    type: "foreignkey",
    placeholder: "Select product type...",
    required: true,
  },
    // üí∞ Pricing
    {
      label: "SKU",
      name: "sku",
      role: "all",
      filter: "SKU",
      subFilter: "",
      title: "SKU is unique identifier for product | 123456789 |...",
      entityName: "attribute-values",
      fieldName: "attribute_name",
      type: "text",
      placeholder: "Enter SKU...",
      required: true,
    },
    {
      label: "Last Purchase Price",
      name: "last_purchase_price",
      role: "all",
      filter: "Last Purchase Price",
      subFilter: "",
      title: "Last Purchase Price | 100 | 200 | 300 |...",
      entityName: "attribute-values",
      fieldName: "attribute_name",
      type: "text",
      placeholder: "Enter last purchase price...",
      required: true,
    },
    {
      label: "Selling Price",
      name: "selling_price",
      role: "all",
      filter: "Selling Price",
      subFilter: "",
      title: "Selling Price | 100 | 200 | 300 |...",
      entityName: "attribute-values",
      fieldName: "attribute_name",
      type: "text",
      placeholder: "Enter selling price...",
      required: true,
    },
    {
      label: "Discount Percentage",
      name: "discount_percentage",
      role: "all",
      filter: "Discount Percentage",
      subFilter: "",
      title: "Discount Percentage | 10 | 20 | 30 |...",
      entityName: "attribute-values",
      fieldName: "attribute_name",
      type: "number",
      placeholder: "Enter discount percentage (%)",
      required: true,
    
    },
  // üï∂Ô∏è Frame Attributes (FR)
  {
    name: "frame_shape_id",
    label: "Frame Shape",
    role: "FR",
    filter: "Shape",
    subFilter: "",
    title: "Frame Shape | Circle | Oval | Square | Rectangle",
    entityName: "attribute-values",
    fieldName: "attribute_name",
    type: "foreignkey",
    placeholder: "Select shape...",
    required: true,
  },
  {
    name: "frame_material_id",
    label: "Frame Material",
    role: "FR",
    filter: "Material",
    subFilter: "",
    title: "Frame Material | Metal | Plastic | Wood | Glass",
    entityName: "attribute-values",
    fieldName: "attribute_name",
    type: "foreignkey",
    placeholder: "Select material...",
    required: true,
  },
  {
    name: "frame_color_id",
    label: "Frame Color",
    role: "FR",
    filter: "Color",
    subFilter: "",
    title: "Frame Color | Black | White | Brown | Green |...",
    entityName: "attribute-values",
    fieldName: "attribute_name",
    type: "foreignkey",
    placeholder: "Select color...",
    required: true,
  },
  {
    name: "temple_length_id",
    label: "Temple Length",
    role: "FR",
    filter: "Length",
    subFilter: "",
    title: "Frame Temple Length ",
    entityName: "attribute-values",
    fieldName: "attribute_name",
    type: "foreignkey",
    placeholder: "Select length...",
    required: true,
  },
  {
    name: "bridge_width_id",
    label: "Bridge Width",
    role: "FR",
    filter: "Width",
    subFilter: "",
    title: "Frame Bridge Width",
    entityName: "attribute-values",
    fieldName: "attribute_name",
    type: "foreignkey",
    placeholder: "Select width...",
    required: true,
  },
  // üëÅÔ∏è Lens Attributes (All)
  {
    name: "lens_base_curve_id",
    label: "Lens Base Curve",
    role: "all",
    filter: "Base Curve",
    subFilter: "RX-CL",
    title: "Lens Base Curve",
    entityName: "attribute-values",
    fieldName: "attribute_name",
    type: "foreignkey",
    placeholder: "Select base curve...",
    required: true,
  },
  {
    name: "lens_color_id",
    label: "Lens Color",
    role: "all",
    filter: "Color",
    subFilter: "",
    title: "Lens Color | Brown | Green | Blue |...",
    entityName: "attribute-values",
    fieldName: "attribute_name",
    type: "foreignkey",
    placeholder: "Select lens color...",
    required: true,
  },
  {
    name: "lens_material_id",
    label: "Lens Material",
    role: "all",
    filter: "Material",
    subFilter: "",
    title: "Lens Material | Polycarbonate | CR-39 | Silicone |...",
    entityName: "attribute-values",
    fieldName: "attribute_name",
    type: "foreignkey",
    placeholder: "Select lens material...",
    required: true,
  },
  {
    name: "lens_diameter_id",
    label: "Lens Diameter",
    role: "all",
    filter: "Diameter",
    subFilter: "",
    title: "Lens Diameter | 12mm | 13mm | 14mm |...",
    entityName: "attribute-values",
    fieldName: "attribute_name",
    type: "foreignkey",
    placeholder: "Select diameter...",
    required: true,
  },
  // üëÅ‚Äçüó® Contact Lens (CL)
  {
    name: "unit_id",
    label: "Unit",
    role: "CL",
    filter: "Unit",
    subFilter: "",
    title: "Items in box | 1piece | 2piece | 3piece |...",
    entityName: "attribute-values",
    fieldName: "attribute_name",
    type: "foreignkey",
    placeholder: "Select unit...",
    required: true,
  },
  {
    name: "lens_water_content_id",
    label: "Lens Water Content",
    role: "CL",
    filter: "Water Content",
    subFilter: "",
    title: "Lens Water Content | 12% | 13% | 14% |...",
    entityName: "attribute-values",
    fieldName: "attribute_name",
    type: "foreignkey",
    placeholder: "Select water content...",
    required: true,
  },
  {
    name: "replacement_schedule_id",
    label: "Replacement Schedule",
    role: "CL",
    filter: "Replacement Schedule",
    subFilter: "",
    title: "Replacement Schedule | Daily | Weekly | Monthly |...",
    entityName: "attribute-values",
    fieldName: "attribute_name",
    type: "foreignkey",
    placeholder: "Select schedule...",
    required: true,
  },
  // ‚öôÔ∏è Common Attributes
  {
    name: "warranty_id",
    label: "Warranty",
    role: "all",
    filter: "Warranty",
    subFilter: "",
    title: "Warranty | 1year | 2year | 3year |...",
    entityName: "attribute-values",
    fieldName: "attribute_name",
    type: "foreignkey",
    placeholder: "Select warranty...",
    required: true,
  },
  {
    name: "dimensions_id",
    label: "Dimensions",
    role: "all",
    filter: "Dimensions",
    subFilter: "",
    title: "Dimensions | 12mm | 13mm | 14mm |...",
    entityName: "attribute-values",
    fieldName: "attribute_name",
    type: "foreignkey",
    placeholder: "Select dimensions...",
    required: true,
  },
  {
    name: "weight_id",
    label: "Weight",
    role: "all",
    filter: "Weight",
    subFilter: "",
    title: "Weight | 100g | 200g | 300g |...",
    entityName: "attribute-values",
    fieldName: "attribute_name",
    type: "foreignkey",
    placeholder: "Select weight...",
    required: true,
  },
  {
    name: "lens_coatings_id",
    label: "Lens Coatings",
    role: "all",
    filter: "Coatings",
    subFilter: "",
    title: "Lens Coatings | Anti-reflective | UV Protection | Scratch Resistant |...",
    entityName: "attribute-values",
    fieldName: "attribute_name",
    type: "checkbox",
    placeholder: "Select coatings...",
    required: true,
  },

  // üßÆ Optical Lens (SL)
  {
    name: "spherical",
    label: "SPH",
    role: "SL",
    filter: "",
    subFilter: "SL-ST",
    title: "SPH | -60 | -50 | -40 |...",
    entityName: "products",
    fieldName: "spherical",
    type: "select",
    placeholder: "Select SPH...",
    required: true,
    options: generateLensOptions(-60, 60),
  },
  {
    name: "cylinder",
    label: "CYL",
    role: "SL",
    filter: "",
    subFilter: "SL-ST",
    title: "CYL | -12 | -11 | -10 |...",
    entityName: "products",
    fieldName: "cylinder",

    type: "select",
    placeholder: "Select CYL...",
    required: true,
    options: generateLensOptions(-12, 12),
  },
  {
    name: "axis",
    label: "AXIS",
    role: "SL",
    filter: "",
    subFilter: "SL-ST",
    title: "AXIS | 0 | 1 | 2 |...",
    entityName: "products",
    fieldName: "axis",
    options: generateLensOptions(0, 180, 1, false),
    type: "select",
    placeholder: "Select AXIS...",
    required: true,
  },
  {
    name: "addition",
    label: "ADD",
    role: "SL",
    filter: "",
    subFilter: "SL-ST",
    title: "ADD | 1 | 2 | 3 |...",
    entityName: "products",
    fieldName: "addition",
    options: generateLensOptions(1, 6),
    type: "select",
    placeholder: "Select ADD...",
    required: true,
  },
  {
    name: "is_active",
    label: "Is Active",
    role: "all",
    filter: "Is Active",
    subFilter: "",
    title: "Is Active | True | False",
    entityName: "",
    fieldName: "is_active",
    type: "checkbox",
    placeholder: "Select Is Active...",
    required: true,
    options: [],
  },
];

// switch (filter) {
//   case "categories":
//     relatedData = data.categories || [];
//   case "suppliers":
//     relatedData = data.suppliers || [];
//   case "manufacturers":
//     relatedData = data.manufacturers || [];
//   case "brands":
//     relatedData = data.brands || [];
//   default:
//     relatedData = data.attributes || [];
// }
export const ProductConfig: ProductForginKeyConfigType[] = [
  // Foreign keys - ÿ£ÿ≥ÿßÿ≥Ÿä ŸÇÿ®ŸÑ ÿ£Ÿä ÿ®ŸäÿßŸÜÿßÿ™ ŸÜÿµŸäÿ©

  // ŸÜÿµŸàÿµ ÿ£ÿ≥ÿßÿ≥Ÿäÿ© ŸÑŸÑŸÖŸÜÿ™ÿ¨
  {
    name: "model",
    label: "Model",
    type: "text",
    role: "all",
    filter: "Model",
    title: "Enter Product Model | Model Number",
    entityName: "",
    fieldName: "",
    placeholder: "Model...",
    required: true,
  },
  {
    name: "name",
    label: "Name",
    role: "all",
    filter: "Name",
    title: "Enter Product Name",
    entityName: "",
    fieldName: "",
    type: "text",
    placeholder: "Name...",
    required: false,
  },
  {
    name: "category_id",
    label: "Category",
    role: "all",
    filter: "categories",
    title: "Select Main Category",
    subFilter: "",
    entityName: "categories",
    fieldName: "name",
    type: "foreignkey",
    placeholder: "Select Category...",
    required: true,
    mapOnly: true,

  },
  {
    name: "supplier_id",
    label: "Supplier",
    role: "all",
    filter: "suppliers",
    title: "Select Supplier | Supplier Name",
    entityName: "suppliers",
    fieldName: "name",
    type: "foreignkey",
    placeholder: "Select Supplier...",
    required: true,
    mapOnly: true, // use to map only the data without any other data
  },
  {
    name: "manufacturer_id",
    label: "Manufacturer",
    role: "all",
    filter: "manufacturers",
    title: "Select Manufacturer | Manufacturer Name",
    entityName: "manufacturers",
    fieldName: "name",
    type: "foreignkey",
    required: true,
    mapOnly: true,
  },
  {
    name: "brand_id",
    label: "Brand",
    role: "all",
    filter: "brands",
    title: "Select Brand | Brand Name",
    entityName: "brands",
    fieldName: "name",
    type: "foreignkey",
    required: true,
    mapOnly: true,
  },

  
];


export const MainTypeConfig : ProductForginKeyConfigType[] = [
  {
    name: "type",
    label: "Type",
    role: "all",
    filter: "Type",
    title: "Select Product Type",
    entityName: "products",
    fieldName: "type",
    type: "select",
    placeholder: "Select Product Type...",
    required: true,
    // options: TypeEnum,
  },
]